#define _CRT_SECURE_NO_WARNINGS 1
//算法
// 了解算法的基本需求
// 掌握推到大O阶的方法
// 会计算算法的时间复杂度和空间复杂度
// 掌握查找算法的评论指标
// 掌握常见的查找算法	重点
// 掌握五种基本的排序算法	重点
//
//算法的定义和特性
//定义
// 算法是解决特定的问题求解步骤的描述,在计算机中保险为指令的优先序列,并且每条指令表示一个或多个操作
// 同一个问题可能会有很多种不同的算法
// 没有通用的算法能解决所有问题
//特性
// 有穷性:算法在不能死循环,可接受的时间内完成
// 确定性:算法的每一步步骤都有确定性,不是二义性,这个步骤是到底干嘛的
// 可行性:算法的每一步执行有限的次数来完成
// 
// 算法设计的需求
//  正确性:算法至少应该具有输入,输出和加工处理无歧义性,能正确反应问题的需求,能够得到问题的正确答案
//   1.算法程序没有语法错误
//   2.算法程序对于合法的输入数据能够产生满足需求的输入结果
//   3.算法程序对于非法的输入数据能够得出满足规格说明的结果
//   4.算法程序对于精心选择的,甚至刁难的测试数据都有满足需求的输出结果
//  可读性:算法设计的另一个目的是为了方便阅读,理解和交流
//   注意:代码并不是越少越好,过度追求"最少代码",会导致绝对多数人看不懂这种代码,降低了可读性,是算法设计中的大忌
//  鲁棒性:当输入数据不合法时,算法也能够做出相关的处理,而不是产生异常或莫名其妙的结果
// 好的算法:时间效率高,存储空间低
// 
// 算法效率度量
//  事后统计方法
//   通过设计好的测试程序和数据,利用计算机计时器对不同算法编制的程序的运行时间进行计较,从而确定算法效率的高低
// 事后统计方法的缺陷(比较费时间)
//  必须依据算法实现编制好程序,这通常需要花费大量的时间和经历
//  时间必须依赖计算机硬件和软件等环境因素,有时会掩盖算法本身的优劣
//  算法的测试数据设计困难,并且程序的运行时间往往还与测试数据的规模有很大关系
//
