#define _CRT_SECURE_NO_WARNINGS 1

#include<stdio.h>

//顺序表
//1.可动态增长的数组
//2.数据在数组中存储时必须是连续的
// 
//缺点
//1.中间或者头部的插入删除很慢，需要挪动数据。时间复杂度是O(N)
//2.空间不够时，增容会有一定的浪费。
//
//优点
// 1.随机访问
// 2.缓存命中率比较高的(跟链式结构对比，因为链表物理不是连续的。顺序表是吃了系统预加载的"buff"才高)
//  cpu访问数据是先要加载缓存，他先看这个地址在不在缓存，不在缓存叫没有命中，在缓存叫命中，命中不与要在内存读，没有命中在内存中读，读了以后放在缓存，再去缓存去读，下一次去读时候不需要在内存中读取在缓存中读取就可以了
//  因为cpu的算数是非常快的，内存会跟不上，所以有一级L1、二级L2、三级L3缓存。一个比一个大一个比一个慢，但是都比内存块
//   还有一个寄存器比三级缓存但是他们属于平级的
//  缓存访问数据的时候先预加载：访问一个数据时不会只加载一个数据到缓存，而是这个数据开始一段数据加载到缓存
// 加载链式的时候会把要读的一段内存放到缓存中(因为链式物理不是连续的，所以只用一部分，剩下的不用，占着不用污染内存)，然后再去内存中读取到缓存中，直到找完
//推荐书《深入了解计算机系统》，虽然叫做操作系统，但是讲的是体系 
//
